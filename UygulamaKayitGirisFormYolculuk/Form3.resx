<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SA//2Q==
</value>
  </data>
</root>